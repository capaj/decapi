(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"./docs/explore/input-type-and-input-field.mdx":function(e,n,t){"use strict";t.r(n);var a=t("./node_modules/react/index.js"),o=t.n(a),r=t("./node_modules/@mdx-js/tag/dist/index.js");function p(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}n.default=function(e){var n=e.components;p(e,["components"]);return o.a.createElement(r.MDXTag,{name:"wrapper",components:n},o.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"complex-input-types-with-inputobjecttype-and-inputfield"}},"Complex input types with ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"h1"},"@InputObjectType")," and ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"h1"},"@InputField")),o.a.createElement(r.MDXTag,{name:"p",components:n},"Sometimes we need arguments to have complex structure (eg. user have some todos and want to delete few of them using filter) like"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-graphql"}},'query {\n  currentUser {\n    deleteManyTodos(where: { isDone: true, nameContains: "call my friend" }) {\n      deletedCount\n    }\n  }\n}\n')),o.a.createElement(r.MDXTag,{name:"p",components:n},"Let's create such ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"User")," type that allows complex ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"where")," argument for ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"deleteManyTodos")," field."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js"}},"import { ObjectType, Field, Arg, InputObjectType } from 'decapi'\n\n@InputObjectType()\nclass WhereFilter {\n  @InputField({ defaultValue: true })\n  isDone: boolean\n  @InputField()\n  nameContains: string\n}\n\n@ObjectType()\nclass DeleteTodosResult {\n  constructor(public deletedCount: number) {}\n  @Field()\n  deletedCount: number\n}\n\n@ObjectType()\nclass User {\n  @Field()\n  deleteManyTodos(where: WhereFilter): DeleteTodosResult {\n    const deletedCount = todosService.remove(where)\n    return new DeleteTodosResult(deletedCount)\n  }\n}\n")))}}}]);