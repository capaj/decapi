// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Field IFieldOptions should be able cast result as array of classes 1`] = `
Object {
  "bar": "castedFromAQuery",
  "castedFieldAsArray": Array [
    Object {
      "bar": "castedFromAField11",
    },
    Object {
      "bar": "castedFromAField21",
    },
  ],
}
`;

exports[`Field IFieldOptions should cast POJO by default 1`] = `
Object {
  "castedQuery": Object {
    "bar": Object {
      "bazChild": "field bazChild test value",
    },
  },
}
`;

exports[`Field IFieldOptions should print as expected 1`] = `
"type Query {
  castedQuery: Foo
}

type Foo {
  bar: String!
  deprecated: String! @deprecated(reason: \\"obsolete\\")
  castedField: Foo
  castedFieldDefinedAsThunk: Foo
  castedFieldNullReturning: Foo
  castedFieldUndefinedReturning: Foo
  castedFieldAsArray: [Foo!]!
  castedFieldAsArrayDefinedAsThunk: [Foo!]!
  castedArrayFieldDefinedAsThunk: [Foo!]!
  castedArrayField: [Foo!]!
  castedFieldAsArrayWithBadReturnValue: [Foo!]!
}"
`;

exports[`Field IFieldOptions should register a field with an explicit type 1`] = `
Object {
  "bar": "castedFromAQuery",
  "castedArrayField": Array [
    Object {
      "bar": "castedFromAField14",
    },
    Object {
      "bar": "castedFromAField24",
    },
  ],
  "castedField": Object {
    "bar": "castedFromAField",
  },
  "castedFieldAsArrayDefinedAsThunk": Array [
    Object {
      "bar": "castedFromAField12",
    },
    Object {
      "bar": "castedFromAField22",
    },
  ],
  "castedFieldDefinedAsThunk": Object {
    "bar": "castedFromAField",
  },
  "castedFieldNullReturning": null,
  "castedFieldUndefinedReturning": Object {
    "bar": "baz",
  },
}
`;
